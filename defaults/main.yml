---
# This role takes advantage of Ansible's user role.
# All user related properties will fall back to Ansible's default values.
# @see http://docs.ansible.com/ansible/user_module.html
#
# users:
#   - username: foobar              #(required)
#     name: Foo Bar
#     uid: 1000
#     group: staff
#     password: xxxxx               # a password, to be used in: user.password | password_hash( 'sha512', user.pwd_salt | default ( users_pwd_salt ) )
#     pwd_salt: yyyy                # a salt value for password hash creation
#     groups: ["adm", "www-data"]   #(we can put groups here, but better use members in os_group variable)
#     append: no                    #(only append groups, leave others)
#     home_mode: "0750"
#     home_create: yes
#     home: /path/to/user/home
#     home_files:
#       - "/path/to/user/home/.bashrc"
#       - "/path/to/user/home/.bash_profile"
#     system: no
#     authorized_keys:
#       - "xxx"
#       - "{{ lookup('file', '/path/to/id_rsa.pub') }}"
#     authorized_keys_exclusive: yes
#     ssh_key_type: rsa
#     ssh_key_bits: 2048
#     ssh_key_password: ""
#     ssh_key_generate: no
#     ssh_key: "xxx" or "{{ lookup('file', '/path/to/id_rsa') }}"
#     shell: /bin/bash
#     update_password: always      # if omited, update_password will be 'on_create', except if 'users_force_passwords' is defined to 'true'
#
# System groups (don't call it group! it's already used by ansible)
# os_groups:
# - name: superadmin
#   gid: XXXX
#   system: no
#   members:
#   - user1
#   - deploy
#   sodoer: without-password
#
# - name: adminsys
#   members:
#   - user1
#   - user2
#   - user3
#   - user4
#   sodoer: with-password
#

# list of users to add
users: []
# users home directory
users_home: /home
# default user's primary group for users
users_group:
# default user's secondary groups
users_groups: []
# default user's home directory permissions
users_home_mode: "0755"
# default user's ssh key type
users_ssh_key_type: rsa
# default user's ssh key bits
users_ssh_key_bits: 2048
# default user's setting for authorized keys exclusive
users_authorized_keys_exclusive: no
# list of users to be removed
users_remove: []

## el "omit" no funciona para la definición del shell, lo que pone el campo a un valor vacío (se debería omitir el parámetro ansible, no solo su valor)
default_shell: /bin/bash

# This variable gives a default value if user.pwd_salt is not defined. 
# It should be overwriten with a vault value in playbooks. 
users_pwd_salt: '3T2Luq3TomaUdlhgOg16pn2xzKEiLZva'

# This variables forces to update all available individual passwords
users_force_passwords: false

# This is the name of the file where the password is written in user's account
users_password_file: password.txt
...
